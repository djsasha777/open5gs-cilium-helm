{{- if .Values.webui.ingress.enabled -}}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-webui
  labels:
{{ include "open5gs.labels.standard" . | indent 4 }}  
    app.kubernetes.io/component: webui
  annotations:
    {{- with .Values.webui.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}

spec:
  rules:
  {{- range .Values.webui.ingress.hosts }}
    - host: {{ .name | quote }}
      http:
        paths:
        {{- $paths := default (list "/") .paths }}
        {{- range $paths }}
          - path: {{ . }}
            backend:
              serviceName: {{ include "open5gs.fullname" $ }}-webui
              servicePort: http
        {{- end }}
  {{- end }}
  tls:
  {{- range .Values.webui.ingress.hosts }}
  {{- if .tls }}
    - hosts:
    {{- if .tlsHosts }}
      {{- range $host := .tlsHosts }}
        - {{ $host }}
      {{- end }}
    {{- else }}
        - {{ .name }}
    {{- end }}
    {{- if .tlsSecret }}
      secretName: {{ .tlsSecret }}
    {{- end }}
  {{- end }}
{{- end }}

{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-webui
  labels:
    epc-mode: webui
    pool: {{ .Values.config.open5gsLbPool }}
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 3000
  selector:
    epc-mode: webui

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-webui 
  labels:
    epc-mode: webui
spec:
  replicas: 1
  selector:
    matchLabels:
      epc-mode: webui
  template:
    metadata:
      labels:
        epc-mode: webui
    spec:    
      containers:
      - name: webui
        imagePullPolicy: {{ .Values.webui.image.pullPolicy }}
        image: "{{ .Values.webui.image.repository }}:{{ .Values.webui.image.tag }}"      
        env:
        - name: DB_URI
          value: mongodb://{{ .Values.db.username }}:{{ .Values.db.password }}@{{ .Release.Name }}-mongodb-svc/{{ .Values.db.name }}
        - name: NODE_ENV
          value: "production"  
        - name: HOSTNAME
          value: '0.0.0.0'

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express
  labels:
    app: mongo-express
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
      - name: mongo-express
        image: mongo-express
        resources:
          limits:
            memory: "1Gi"
            cpu: "1000m"
          requests:
            memory: "200Mi"
            cpu: "200m"
        ports: 
        - containerPort: 8081
        env:
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          value: {{ .Values.db.username }}
        - name: ME_CONFIG_MONGODB_SERVER
          value: {{ .Release.Name }}-mongodb-svc
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          value: {{ .Values.db.password }}
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express-service
spec:
  selector:
    app: mongo-express
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081